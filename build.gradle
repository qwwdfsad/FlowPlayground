buildscript {
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:4.0.2"
        classpath "me.champeau.gradle:jmh-gradle-plugin:0.4.7"
        classpath "net.ltgt.gradle:gradle-apt-plugin:0.10"
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.21'
}


apply plugin: "net.ltgt.apt"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "me.champeau.gradle.jmh"

group 'org.jetbrains.kotlinx'
version '1.0-SNAPSHOT'

repositories {
    mavenLocal()
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testCompile "org.jetbrains.kotlin:kotlin-test"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-debug:$coroutines_version"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-rx2:$coroutines_version"
    compile "io.projectreactor:reactor-core:3.2.5.RELEASE"
    compile "org.reactivestreams:reactive-streams:1.0.2"
    testCompile "org.reactivestreams:reactive-streams-tck:1.0.2"
    compile 'io.reactivex.rxjava2:rxjava:2.1.9'
    testCompile 'org.reactivestreams:reactive-streams-examples:1.0.2'
    compile "org.openjdk.jmh:jmh-core:1.21"
}

ext.annotations = ["-Xuse-experimental=kotlin.Experimental",
                   "-Xuse-experimental=kotlin.experimental.ExperimentalTypeInference",
                   "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi",
                   "-Xuse-experimental=kotlinx.coroutines.ObsoleteCoroutinesApi",
                   "-Xuse-experimental=kotlinx.coroutines.InternalCoroutinesApi"]

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
    kotlinOptions.freeCompilerArgs += annotations
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
    kotlinOptions.freeCompilerArgs += annotations
}


compileJmhKotlin {
    kotlinOptions.jvmTarget = "1.8"
    kotlinOptions.freeCompilerArgs += annotations
}


jmh.jmhVersion = '1.21'

jmhJar {
    baseName 'benchmarks'
    classifier = null
    version = null
    destinationDir = file("$rootDir")
}
